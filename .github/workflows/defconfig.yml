name:  defconfig

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'true'
        
jobs:
  GenerateConfig:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
        TZ: Asia/Shanghai
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        echo "Init Building:$(date +%F_%H%M%S)"
        sudo -E swapoff -a
        docker rmi $(docker images -q) 
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile /etc/apt/sources.list.d
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y 
        sudo -E apt-get full-upgrade -y 
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804) rdate ca-certificates
        sudo -E apt-get autoremove -y --purge 
        sudo -E apt-get clean -y
        
    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a
        df -hP
        sudo mkdir -pv /build/{package,upload,buildinfo}
        sudo chown -R runner:runner /build
        
    - name: Checkout
      run: |
        sudo chmod a+x $GITHUB_WORKSPACE/scripts/*.sh
        bash $GITHUB_WORKSPACE/scripts/GenerateConfig_init.sh
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Generate
      run: |
        bash $GITHUB_WORKSPACE/scripts/GenerateConfig.sh

    - name: Deliver buildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_buildinfo
        path: /build/buildinfo/
        
    - name: Commit files
      run: |
        cd $GITHUB_WORKSPACE
        git pull
        cd buildinfo
        mkdir bak/
        mv *.buildinfo bak/
        cp /build/buildinfo/*.buildinfo $GITHUB_WORKSPACE/buildinfo/
        ls -lha $GITHUB_WORKSPACE/buildinfo/
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "Add changes" -a
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: buildinfo
        
    - name: Generate release tag
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +%F_%H%M%S)_Config"
        echo "::set-output name=release_date::$(date +"%F_%H%M%S")"
        touch release.txt
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v0.1.8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }}_Config
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          /build/buildinfo/*