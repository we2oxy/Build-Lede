name:  ssh2actions

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  ssh2actions:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Init Building Dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
        TZ: Asia/Shanghai
      run: |
        sudo timedatectl set-timezone "$TZ"
        echo "Init Building":$(date +%F_%H%M%S)
        #docker rmi $(docker images -q)
        #sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        #sudo -E apt-get update -y
        #sudo -E apt-get full-upgrade -y
        #sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget
        #sudo -E apt-get autoremove -y --purge
        #sudo -E apt-get clean -y
        #sudo -E swapoff -a
        #sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
       
    - name: Clone Source
      run: |
        echo "Clone Source":$(date +%F_%H%M%S)
        df -hP
        cd /
        sudo mkdir -pv /build
        sudo mkdir -pv /build/{package,upload}
        sudo chown -R runner:runner /build
        cd /build
        svn co https://github.com/we2oxy/OpenWrtConfig/trunk/ OpenWrtConfig
        git clone https://github.com/coolsnowwolf/lede.git "lede"
        cd lede
        echo "src-git helloworld https://github.com/fw876/helloworld.git" >> feeds.conf.default
        rm -rf tmp/
        ls -lah 
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configuration Customization
      id: configuration
      run: |
        echo "Configuration Customization":$(date +%F_%H%M%S)
        cd /build/OpenWrtConfig/scripts/lede/lede-master/
        chmod a+x ./*
        ./lede-master.sh
    
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      #if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: Build
      id: build
      run: |
        echo "Build lede":$(date +%F_%H%M%S)
        cd /build/lede/ && ls -lash
        make defconfig
        make -j8 download || make -j8 download V=s
        ./scripts/diffconfig.sh > /build/upload/lede.buildinfo
        pwd  && cat /build/upload/lede.buildinfo
        wc -l /build/upload/lede.buildinfo

    - name: Deliver firmware
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: /build/upload/
        if-no-files-found: ignore


          