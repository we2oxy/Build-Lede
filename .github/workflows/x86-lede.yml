name:  x86-lede

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
      tag:
        description: 'Generate release tag'
        required: false
        default: 'true'
      release:
        description: 'Upload firmware to release'
        required: false
        default: 'true'
  schedule:
    - cron:  '40 8 * * 5'
  watch:
    types: started

jobs:
  x86-lede:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Init Building Dependencies
      #if: ${{ github.event.inputs.init == 'true' }}
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai"
        echo "Init Building:$(date +%F_%H%M%S)"
        docker rmi $(docker images -q) 
        sudo -E apt-get remove -y --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
        sudo -E apt-get update -y 
        sudo -E apt-get full-upgrade -y 
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget  
        sudo -E apt-get autoremove -y --purge 
        sudo -E apt-get clean -y 
        sudo -E swapoff -a
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
        
    - name: Clone Source
      run: |
        echo "Clone Source":$(date +%F_%H%M%S)
        df -hP
        sudo mkdir -pv /build/{package,upload,buildinfo}
        sudo chown -R runner:runner /build
        git clone https://github.com/coolsnowwolf/lede.git /build/lede
        cd /build/lede
        echo "src-git helloworld https://github.com/fw876/helloworld.git" >> feeds.conf.default
        echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> feeds.conf.default
        echo "#src-git kenzo https://github.com/kenzok8/openwrt-packages" >> feeds.conf.default
        cat -n feeds.conf.default      
        rm -rf tmp/
        cd package/lean/
        rm -rf luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
        git clone https://github.com/jerrykuku/lua-maxminddb.git
        git clone https://github.com/jerrykuku/luci-app-vssr.git
        git clone --depth=1 https://github.com/rufengsuixing/luci-app-onliner
        git clone --depth=1 -b master https://github.com/vernesong/OpenClash
        cd /build/lede
        sh -c "./scripts/feeds update -a && ./scripts/feeds install -a"
        wget -O /build/lede/x86-lede.buildinfo https://raw.githubusercontent.com/we2oxy/Build-Lede/master/buildinfo/x86-lede.buildinfo
        cat /build/lede/x86-lede.buildinfo > "/build/lede/.config"
    - name: Configuration Customization
      id: configuration
      run: |
        echo "Configuration Customization":$(date +%F_%H%M%S)
        # system
        sed -i 's/luci-theme-bootstrap/luci-theme-argon/' /build/lede/feeds/luci/collections/luci/Makefile
        cat /build/lede/feeds/luci/collections/luci/Makefile
        sed -i '$d' /build/lede/package/lean/default-settings/files/zzz-default-settings
        sed -i '/DISTRIB_REVISION/d' /build/lede/package/lean/default-settings/files/zzz-default-settings
        sed -i '/DISTRIB_DESCRIPTION/d' /build/lede/package/lean/default-settings/files/zzz-default-settings
        cat $GITHUB_WORKSPACE/uciconf/lede-master/lede-master_settings >> /build/lede/package/lean/default-settings/files/zzz-default-settings
        sed -i 's/10.0.0.199/10.0.0.66/g' /build/lede/package/lean/default-settings/files/zzz-default-settings
        sed -i '/CYXluq4wUazHjmCDBCqXF/d'  /build/lede/package/lean/default-settings/files/zzz-default-settings
        cat /build/lede/package/lean/default-settings/files/zzz-default-settings
        sed -i 's,-SNAPSHOT,,g' /build/lede/include/version.mk
        sed -i 's,-SNAPSHOT,,g' /build/lede/package/base-files/image-config.in
        svn co https://github.com/we2oxy/OpenWrtConfig/trunk/files/etc /build/lede/files/etc
        cp -R /build/lede/files/etc/ssrplus/ /build/lede/files/etc/vssr/
        rm -rf /build/lede/files/etc/.svn/
        ls -lahR /build/lede/files/
        # luci-app-vssr
        sed -i '/result.encrypt_method/a\        result.fast_open = "1"' /build/lede/package/lean/luci-app-vssr/root/usr/share/vssr/subscribe.lua
        sed -i 's,ispip.clang.cn/all_cn.txt,cdn.jsdelivr.net/gh/QiuSimons/Chnroute@master/dist/chnroute/chnroute.txt,g' /build/lede/package/lean/luci-app-vssr/luasrc/controller/vssr.lua
        sed -i 's,ispip.clang.cn/all_cn.txt,cdn.jsdelivr.net/gh/QiuSimons/Chnroute@master/dist/chnroute/chnroute.txt,g' /build/lede/package/lean/luci-app-vssr/root/usr/share/vssr/update.lua
        # luci-app-ssr-plus
        rm -rf  /build/lede/feeds/helloworld/luci-app-ssr-plus/po/zh_Hans
        sed -i '/result.encrypt_method/a\                result.fast_open = "1"' /build/lede/feeds/helloworld/luci-app-ssr-plus/root/usr/share/shadowsocksr/subscribe.lua
        sed -i 's,ispip.clang.cn/all_cn,cdn.jsdelivr.net/gh/QiuSimons/Chnroute@master/dist/chnroute/chnroute.txt,' /build/lede/feeds/helloworld/luci-app-ssr-plus/root/etc/init.d/shadowsocksr
        sed -i 's,YW5vbnltb3Vz/domain-list-community/release/gfwlist.txt,Loyalsoldier/v2ray-rules-dat/release/gfw.txt,'  /build/lede/feeds/helloworld/luci-app-ssr-plus/root/etc/init.d/shadowsocksr
        sed -i '/Clang.CN.CIDR/a\o:value("https://cdn.jsdelivr.net/gh/QiuSimons/Chnroute@master/dist/chnroute/chnroute.txt", translate("QiuSimons/Chnroute"))\' /build/lede/feeds/helloworld/luci-app-ssr-plus/luasrc/model/cbi/shadowsocksr/advanced.lua
        
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: Defconfig
      id: defconfig
      run: |
        echo "Build lede":$(date +%F_%H%M%S)
        cd /build/lede/ && ls -lash
        make defconfig
        make -j8 download || make -j1 download || make -j1 download V=s 
        ./scripts/diffconfig.sh > /build/buildinfo/x86-lede.buildinfo
        wc -l /build/buildinfo/x86-lede.buildinfo
        cat /build/buildinfo/x86-lede.buildinfo
        echo "########################################"
        ls -lh /build/buildinfo/

    - name: Deliver buildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_buildinfo
        path: /build/buildinfo/
        if-no-files-found: ignore
        
    - name: Build
      id: build
      run: |
        echo "Build lede":$(date +%F_%H%M%S)
        cd /build/
        sudo chown -R runner:runner ./*
        cd /build/lede/
        ls -lash
        echo "start make!":$(date +%F_%H%M%S)
        make -j$(($(nproc) + 1)) || make -j1 V=s
        tree bin/
        tree -d bin/
        cd /build/lede/bin/targets/x86/64/ && ls -lSha
        echo "::set-output name=BUILD_STATUS::success"

    - name: Prepare artifact
      run: |
        rm -rf $(find /build/lede/bin/targets/ -type d -name "packages")
        cp -rf $(find /build/lede/bin/targets/ -type f) /build/upload/
        cp -rf $(find /build/lede/bin/packages/ -type f -name "*.ipk") /build/package/
        cd /build/ && zip -qr /build/upload/package_$(date +%F_%H%M%S).zip package/
        cd /build/upload/
        ls -lh 
        for source_name in `ls openwrt*`;do tag_name=$(date +%F_%H%M%S)_  modify_name=$tag_name$source_name;mv $source_name $modify_name;done
        ls -lh /build/upload/
        
    - name: Deliver firmware
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: /build/upload/
        if-no-files-found: ignore
        
    - name: Generate release tag
      if: steps.build.outputs.BUILD_STATUS == 'success'
      id: tag
      run: |
        echo "::set-output name=release_tag::$(date +%F_%H%M%S)_lede-x86"
        echo "::set-output name=release_date::$(date +"%F_%H%M%S")"
        touch release.txt
        echo "http://10.0.0.66" > release.txt
        #echo "::set-output name=status::success"
        echo "::set-output name=TAG_STATUS::success"
        
    - name: Upload firmware to release
      if: steps.tag.outputs.TAG_STATUS == 'success'
      uses: softprops/action-gh-release@v0.1.8
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.tag.outputs.release_date }}_lede-x86
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: |
          /build/upload/*
          