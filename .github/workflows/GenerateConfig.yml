name:  GenerateConfig

on:
  repository_dispatch:
  workflow_dispatch:

jobs:
  lede1701:
    runs-on: ubuntu-latest
   
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
        
    - name: Clone Source
      run: |
        echo "Clone Source":$(date +%F_%H%M%S)
        df -hP
        sudo mkdir -pv /build/{package,upload,buildinfo}
        sudo chown -R runner:runner /build
        git clone --branch lede-17.01 --single-branch  https://github.com/coolsnowwolf/openwrt.git /build/lede-1701
        cd /build/lede-1701
        echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> feeds.conf.default
        echo "#src-git kenzo https://github.com/kenzok8/openwrt-packages" >> feeds.conf.default
        cat -n feeds.conf.default      
        rm -rf tmp/
        cd package/lean/
        rm -rf luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
        git clone https://github.com/jerrykuku/lua-maxminddb.git
        git clone https://github.com/jerrykuku/luci-app-vssr.git
        git clone --depth=1 https://github.com/rufengsuixing/luci-app-onliner
        git clone --depth=1 -b master https://github.com/vernesong/OpenClash
        cd /build/lede-1701
        sh -c "./scripts/feeds update -a && ./scripts/feeds install -a"

    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: Defconfig
      run: |
        echo "Build lede":$(date +%F_%H%M%S)
        cd /build/lede-1701/ && ls -lash
        make defconfig
        make -j8 download || make -j1 download || make -j1 download V=s 
        ./scripts/diffconfig.sh > /build/buildinfo/x86-lede-1701.buildinfo
        wc -l /build/buildinfo/x86-lede-1701.buildinfo
        cat /build/buildinfo/x86-lede-1701.buildinfo
        echo "########################################"
        ls -lh /build/buildinfo/

    - name: Deliver buildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_buildinfo
        path: /build/buildinfo/
        if-no-files-found: ignore
        
  lede:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: CloneSource
      run: |
        echo "Clone Source":$(date +%F_%H%M%S)
        df -hP
        sudo mkdir -pv /build/{package,upload,buildinfo}
        sudo chown -R runner:runner /build
        git clone https://github.com/coolsnowwolf/lede.git /build/lede
        cd /build/lede
        echo "src-git helloworld https://github.com/fw876/helloworld.git" >> feeds.conf.default
        echo "src-git passwall https://github.com/xiaorouji/openwrt-passwall" >> feeds.conf.default
        echo "#src-git kenzo https://github.com/kenzok8/openwrt-packages" >> feeds.conf.default
        cat -n feeds.conf.default      
        rm -rf tmp/
        cd package/lean/
        rm -rf luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
        git clone https://github.com/jerrykuku/lua-maxminddb.git
        git clone https://github.com/jerrykuku/luci-app-vssr.git
        git clone --depth=1 https://github.com/rufengsuixing/luci-app-onliner
        git clone --depth=1 -b master https://github.com/vernesong/OpenClash
        cd /build/lede
        sh -c "./scripts/feeds update -a && ./scripts/feeds install -a"
        
    - name: SSH2Actions
      uses: P3TERX/ssh2actions@v1.0.0
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: ledeDefconfig
      id: lededefconfig
      run: |
        echo "Build lede":$(date +%F_%H%M%S)
        cd /build/lede/ && ls -lash
        make defconfig
        make -j8 download || make -j1 download || make -j1 download V=s 
        ./scripts/diffconfig.sh > /build/buildinfo/x86-lede.buildinfo
        wc -l /build/buildinfo/x86-lede.buildinfo
        cat /build/buildinfo/x86-lede.buildinfo
        echo "########################################"
        ls -lh /build/buildinfo/

    - name: Deliverbuildinfo
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_lede_buildinfo
        path: /build/buildinfo/
        if-no-files-found: ignore
    